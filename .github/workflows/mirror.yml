name: "Mirror"

on:
  - push

env:
  owner: "${{ github.repository_owner }}-mirror"

jobs:

  # ------------------------------------------------------------------------------------------------------------------ #
  # GitHub.
  # ------------------------------------------------------------------------------------------------------------------ #

  mirror_github:
    runs-on: ubuntu-latest
    name: "GitHub"
    env:
      domain: "${{ github.server_url }}"
    steps:
      - run: |
          echo "repo_name=$( echo '${{ github.repository }}' | awk -F '/' '{ print $2 }' )" >> $GITHUB_ENV
        shell: bash
      - run: |
          curl -X POST \
          -H 'Authorization: Bearer ${{ secrets.BOT_GITHUB_TOKEN }}' \
          -H 'Accept: application/vnd.github+json' \
          '${{ github.api_url }}/orgs/${{ env.owner }}/repos' \
          -d '{"name":"${{ env.repo_name }}","private":false,"has_issues":false,"has_projects":false,"has_wiki":false}' \
          -s -o '/dev/null'
        shell: bash
      - uses: ghastore/mirror@main
        with:
          src_repo: "${{ github.server_url }}/${{ github.repository }}.git"
          src_user: "${{ secrets.BOT_GITHUB_NAME }}"
          src_token: "${{ secrets.BOT_GITHUB_TOKEN }}"
          dst_repo: "${{ env.domain }}/${{ env.owner }}/${{ env.repo_name }}.git"
          dst_user: "${{ secrets.BOT_GITHUB_NAME }}"
          dst_token: "${{ secrets.BOT_GITHUB_TOKEN }}"

  # ------------------------------------------------------------------------------------------------------------------ #
  # GitLab.
  # ------------------------------------------------------------------------------------------------------------------ #

  mirror_gitlab:
    runs-on: ubuntu-latest
    name: "GitLab"
    env:
      domain: "https://gitlab.com"
      version: "v4"
      nsID: '57669711'
    steps:
      - run: |
          echo "repo_name=$( echo '${{ github.repository }}' | awk -F '/' '{ print $2 }' )" >> $GITHUB_ENV
        shell: bash
      - run: |
          curl -X POST \
          -H 'Authorization: Bearer ${{ secrets.BOT_GITLAB_TOKEN }}' \
          -H 'Content-Type: application/json' \
          '${{ env.domain }}/api/${{ env.version }}/projects' \
          -d '{"name":"${{ env.repo_name }}","path":"${{ env.repo_name }}","namespace_id":"${{ env.nsID }}","visibility":"public","issues_access_level":"disabled","wiki_access_level":"disabled"}' \
          -s -o '/dev/null'
        shell: bash
      - uses: ghastore/mirror@main
        with:
          src_repo: "${{ github.server_url }}/${{ github.repository }}.git"
          src_user: "${{ secrets.BOT_GITHUB_NAME }}"
          src_token: "${{ secrets.BOT_GITHUB_TOKEN }}"
          dst_repo: "${{ env.domain }}/${{ env.owner }}/${{ env.repo_name }}.git"
          dst_user: "${{ secrets.BOT_GITLAB_NAME }}"
          dst_token: "${{ secrets.BOT_GITLAB_TOKEN }}"

  # ------------------------------------------------------------------------------------------------------------------ #
  # Codeberg.
  # ------------------------------------------------------------------------------------------------------------------ #

  mirror_codeberg:
    runs-on: ubuntu-latest
    name: "Codeberg"
    env:
      domain: "https://codeberg.org"
      version: "v1"
    steps:
      - run: |
          echo "repo_name=$( echo '${{ github.repository }}' | awk -F '/' '{ print $2 }' )" >> $GITHUB_ENV
        shell: bash
      - run: |
          curl -X POST \
          -H 'Authorization: token ${{ secrets.BOT_CODEBERG_TOKEN }}' \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          '${{ env.domain }}/api/${{ env.version }}/orgs/${{ env.owner }}/repos' \
          -d '{"name":"${{ env.repo_name }}"}' \
          -s -o '/dev/null'
        shell: bash
      - uses: ghastore/mirror@main
        with:
          src_repo: "${{ github.server_url }}/${{ github.repository }}.git"
          src_user: "${{ secrets.BOT_GITHUB_NAME }}"
          src_token: "${{ secrets.BOT_GITHUB_TOKEN }}"
          dst_repo: "${{ env.domain }}/${{ env.owner }}/${{ env.repo_name }}.git"
          dst_user: "${{ secrets.BOT_CODEBERG_NAME }}"
          dst_token: "${{ secrets.BOT_CODEBERG_TOKEN }}"
